[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3293",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3293/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3293/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3293/events",
    "html_url": "https://github.com/expressjs/express/pull/3293",
    "id": 224879206,
    "number": 3293,
    "title": "res.location back test",
    "user": {
      "login": "WORMSS",
      "id": 1384537,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1384537?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WORMSS",
      "html_url": "https://github.com/WORMSS",
      "followers_url": "https://api.github.com/users/WORMSS/followers",
      "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
      "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
      "organizations_url": "https://api.github.com/users/WORMSS/orgs",
      "repos_url": "https://api.github.com/users/WORMSS/repos",
      "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WORMSS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-27T18:52:15Z",
    "updated_at": "2017-04-27T18:52:15Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3293",
      "html_url": "https://github.com/expressjs/express/pull/3293",
      "diff_url": "https://github.com/expressjs/express/pull/3293.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3293.patch"
    },
    "body": "A split of #3291 of just the tests.\r\n\r\nFixes #3292"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3292",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3292/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3292/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3292/events",
    "html_url": "https://github.com/expressjs/express/issues/3292",
    "id": 224878968,
    "number": 3292,
    "title": "Missing res.location('back') tests",
    "user": {
      "login": "WORMSS",
      "id": 1384537,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1384537?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WORMSS",
      "html_url": "https://github.com/WORMSS",
      "followers_url": "https://api.github.com/users/WORMSS/followers",
      "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
      "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
      "organizations_url": "https://api.github.com/users/WORMSS/orgs",
      "repos_url": "https://api.github.com/users/WORMSS/repos",
      "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WORMSS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-27T18:51:26Z",
    "updated_at": "2017-04-27T18:51:26Z",
    "closed_at": null,
    "body": "I had spotted there were no tests for res.location('back') so I have added them.\r\n\r\nThis is for a code split of #3290"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3291",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3291/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3291/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3291/events",
    "html_url": "https://github.com/expressjs/express/pull/3291",
    "id": 224862240,
    "number": 3291,
    "title": "location: back override option + tests",
    "user": {
      "login": "WORMSS",
      "id": 1384537,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1384537?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WORMSS",
      "html_url": "https://github.com/WORMSS",
      "followers_url": "https://api.github.com/users/WORMSS/followers",
      "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
      "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
      "organizations_url": "https://api.github.com/users/WORMSS/orgs",
      "repos_url": "https://api.github.com/users/WORMSS/repos",
      "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WORMSS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-04-27T17:48:18Z",
    "updated_at": "2017-04-27T21:40:31Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3291",
      "html_url": "https://github.com/expressjs/express/pull/3291",
      "diff_url": "https://github.com/expressjs/express/pull/3291.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3291.patch"
    },
    "body": "Make option for setting back as location to override built in behavior. To redirect to page \"back\", default behavior is to use referrer or navigate to root of domain and not the intended relative path. This can be compensated for with \"./back\" but when dealing with third party responses, you would need to test for \"back\" on every call to replace.\r\n\r\nAdded tests for location('back')"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3290",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3290/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3290/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3290/events",
    "html_url": "https://github.com/expressjs/express/issues/3290",
    "id": 224861882,
    "number": 3290,
    "title": "Option to turn off built in 'back' functionality in res.location('back')",
    "user": {
      "login": "WORMSS",
      "id": 1384537,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1384537?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WORMSS",
      "html_url": "https://github.com/WORMSS",
      "followers_url": "https://api.github.com/users/WORMSS/followers",
      "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
      "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
      "organizations_url": "https://api.github.com/users/WORMSS/orgs",
      "repos_url": "https://api.github.com/users/WORMSS/repos",
      "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WORMSS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 133578714,
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-04-27T17:47:00Z",
    "updated_at": "2017-04-27T18:52:55Z",
    "closed_at": null,
    "body": "I had spotted there were no tests for `res.location('back')` so I have added them.\r\n\r\nI came across this because I was trying to navigate to the relative page called 'back' and was being redirected to domain root. It was not expected. After looking at the code I spotted there was a \"special\" case for the word \"back\"."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3287",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3287/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3287/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3287/events",
    "html_url": "https://github.com/expressjs/express/issues/3287",
    "id": 224472273,
    "number": 3287,
    "title": "Problem starting this in docker",
    "user": {
      "login": "danncoba",
      "id": 2931774,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2931774?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danncoba",
      "html_url": "https://github.com/danncoba",
      "followers_url": "https://api.github.com/users/danncoba/followers",
      "following_url": "https://api.github.com/users/danncoba/following{/other_user}",
      "gists_url": "https://api.github.com/users/danncoba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danncoba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danncoba/subscriptions",
      "organizations_url": "https://api.github.com/users/danncoba/orgs",
      "repos_url": "https://api.github.com/users/danncoba/repos",
      "events_url": "https://api.github.com/users/danncoba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danncoba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-26T13:41:38Z",
    "updated_at": "2017-04-27T03:52:22Z",
    "closed_at": null,
    "body": "When starting this on amazon docker the npm start fails.\r\n\r\nThe exact error is as follows\r\n```\r\n> x.x.x@0.0.0 start /app\r\n> node ./bin/www\r\n\r\n/usr/local/bin/node[16]: ../src/pipe_wrap.cc:168:static void node::PipeWrap::Connect(const v8::FunctionCallbackInfo<v8::Value>&): Assertion `args[1]->IsString()' failed.\r\n 1: node::Abort() [node]\r\n 2: node::Assert(char const* const (*) [4]) [node]\r\n 3: node::PipeWrap::Connect(v8::FunctionCallbackInfo<v8::Value> const&) [node]\r\n 4: v8::internal::FunctionCallbackArguments::Call(void (*)(v8::FunctionCallbackInfo<v8::Value> const&)) [node]\r\n 5: 0xb46eac [node]\r\n 6: v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [node]\r\n 7: 0xbd3e6f043a7\r\nAborted\r\n\r\nnpm info lifecycle x.x.x@0.0.0~start: Failed to exec start script\r\nnpm ERR! Linux 4.4.41-36.55.amzn1.x86_64\r\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"start\"\r\nnpm ERR! node v7.7.3\r\nnpm ERR! npm  v4.1.2\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! x.x.x@0.0.0 start: `node ./bin/www`\r\nnpm ERR! Exit status 134\r\nnpm ERR!\r\nnpm ERR! Failed at the x.x.x@0.0.0 start script 'node ./bin/www'.\r\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\r\nnpm ERR! If you do, this is most likely a problem with the x.x.x package,\r\nnpm ERR! not with npm itself.\r\nnpm ERR! Tell the author that this fails on your system:\r\nnpm ERR!     node ./bin/www\r\nnpm ERR! You can get information on how to open an issue for this project with:\r\nnpm ERR!     npm bugs x.x.x\r\nnpm ERR! Or if that isn't available, you can get their info via:\r\nnpm ERR!     npm owner ls x.x.x\r\nnpm ERR! There is likely additional logging output above.\r\n\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     /app/npm-debug.log`\r\n```\r\nAs you see it's throwing a c++ error of node itself.\r\n\r\nNode used is 7.7.3\r\nNpm is 4.1.2\r\nLatest express\r\n\r\nThis happens on npm start. \r\npackage.json looks like this:\r\n```\r\n'\"dependencies\": {\r\n    \"aws-sdk\": \"^2.40.0\",\r\n    \"body-parser\": \"~1.13.2\",\r\n    \"cookie-parser\": \"~1.3.5\",\r\n    \"cors\": \"^2.8.3\",\r\n    \"debug\": \"~2.2.0\",\r\n    \"ejs\": \"~2.5.6\",\r\n    \"express\": \"~4.13.1\",\r\n    \"express-jwt\": \"^5.1.0\",\r\n    \"jsonwebtoken\": \"^7.3.0\",\r\n    \"morgan\": \"~1.6.1\",\r\n    \"multer\": \"^1.3.0\",\r\n    \"multer-s3\": \"^2.7.0\",\r\n    \"redis\": \"^2.7.1\",\r\n    \"serve-favicon\": \"~2.3.0\",\r\n    \"validator\": \"^7.0.0\"\r\n  },'\r\n```\r\nIt does fail on start. It's passing env variables which i do have a few, through enviroment variables on aws. I'm getting the enviroment variables inside the app with process.env.ENV_VARIABLE.\r\n\r\nFor some reason it breaks and i can't figure out as it's only giving me that error above, nothing more.\r\n\r\nPlease help.\r\n"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3286",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3286/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3286/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3286/events",
    "html_url": "https://github.com/expressjs/express/pull/3286",
    "id": 224161522,
    "number": 3286,
    "title": "Update debug module version",
    "user": {
      "login": "LucianBuzzo",
      "id": 15064535,
      "avatar_url": "https://avatars3.githubusercontent.com/u/15064535?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LucianBuzzo",
      "html_url": "https://github.com/LucianBuzzo",
      "followers_url": "https://api.github.com/users/LucianBuzzo/followers",
      "following_url": "https://api.github.com/users/LucianBuzzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/LucianBuzzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LucianBuzzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LucianBuzzo/subscriptions",
      "organizations_url": "https://api.github.com/users/LucianBuzzo/orgs",
      "repos_url": "https://api.github.com/users/LucianBuzzo/repos",
      "events_url": "https://api.github.com/users/LucianBuzzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LucianBuzzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578716,
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-25T14:39:10Z",
    "updated_at": "2017-04-27T05:12:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3286",
      "html_url": "https://github.com/expressjs/express/pull/3286",
      "diff_url": "https://github.com/expressjs/express/pull/3286.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3286.patch"
    },
    "body": "This version fixes the issue described here https://github.com/visionmedia/debug/issues/443\r\n> If process.env.DEBUG is set to a value other than a string a TypeError occurs. This can easily happen when using webpack to build a project."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3276",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3276/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3276/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3276/events",
    "html_url": "https://github.com/expressjs/express/issues/3276",
    "id": 220660015,
    "number": 3276,
    "title": "Add Marko to wiki::Home.md ## Template Engines",
    "user": {
      "login": "noformnocontent",
      "id": 23745012,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23745012?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noformnocontent",
      "html_url": "https://github.com/noformnocontent",
      "followers_url": "https://api.github.com/users/noformnocontent/followers",
      "following_url": "https://api.github.com/users/noformnocontent/following{/other_user}",
      "gists_url": "https://api.github.com/users/noformnocontent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noformnocontent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noformnocontent/subscriptions",
      "organizations_url": "https://api.github.com/users/noformnocontent/orgs",
      "repos_url": "https://api.github.com/users/noformnocontent/repos",
      "events_url": "https://api.github.com/users/noformnocontent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noformnocontent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-04-10T14:20:23Z",
    "updated_at": "2017-04-20T04:41:27Z",
    "closed_at": null,
    "body": "[wiki::Home.md ## Template Engines](https://github.com/expressjs/express/wiki#template-engines) >> \r\n``` markdown\r\n - [Marko](https://github.com/marko-js/marko/blob/master/docs/express.md) -- renders React components on server. It renders static markup and *does not* support mounting those views on the client.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3269",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3269/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3269/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3269/events",
    "html_url": "https://github.com/expressjs/express/pull/3269",
    "id": 219728186,
    "number": 3269,
    "title": "Add 'json escape' option to unicode escape <, >, and &",
    "user": {
      "login": "g-k",
      "id": 226605,
      "avatar_url": "https://avatars2.githubusercontent.com/u/226605?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g-k",
      "html_url": "https://github.com/g-k",
      "followers_url": "https://api.github.com/users/g-k/followers",
      "following_url": "https://api.github.com/users/g-k/following{/other_user}",
      "gists_url": "https://api.github.com/users/g-k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g-k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g-k/subscriptions",
      "organizations_url": "https://api.github.com/users/g-k/orgs",
      "repos_url": "https://api.github.com/users/g-k/repos",
      "events_url": "https://api.github.com/users/g-k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g-k/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-04-05T22:00:06Z",
    "updated_at": "2017-04-27T05:12:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3269",
      "html_url": "https://github.com/expressjs/express/pull/3269",
      "diff_url": "https://github.com/expressjs/express/pull/3269.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3269.patch"
    },
    "body": "refs: #3268"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3268",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3268/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3268/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3268/events",
    "html_url": "https://github.com/expressjs/express/issues/3268",
    "id": 219727942,
    "number": 3268,
    "title": "Option to unicode escape <, >, and & in JSON output",
    "user": {
      "login": "g-k",
      "id": 226605,
      "avatar_url": "https://avatars2.githubusercontent.com/u/226605?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g-k",
      "html_url": "https://github.com/g-k",
      "followers_url": "https://api.github.com/users/g-k/followers",
      "following_url": "https://api.github.com/users/g-k/following{/other_user}",
      "gists_url": "https://api.github.com/users/g-k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g-k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g-k/subscriptions",
      "organizations_url": "https://api.github.com/users/g-k/orgs",
      "repos_url": "https://api.github.com/users/g-k/repos",
      "events_url": "https://api.github.com/users/g-k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g-k/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false
      },
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-04-05T21:59:01Z",
    "updated_at": "2017-04-26T15:18:44Z",
    "closed_at": null,
    "body": "An option to unicode escape <, >, & as \\u003c, \\u003e, \\u0026 \"to keep some browsers from misinterpreting JSON output as HTML.\"\r\n\r\nhttps://golang.org/src/encoding/json/encode.go?s=6456:6499#L48\r\n\r\nThis can be implemented as a middleware layer monkey-patching `res.send` as below, but it might be nicer to have in core.\r\n\r\n```js\r\nconst escapeJson = function (json) {\r\n    if (typeof json !== 'string') {\r\n\treturn json;\r\n    }\r\n    return json.replace(/</g, '\\\\u003c')\r\n\t       .replace(/>/g, '\\\\u003e')\r\n\t       .replace(/&/g, '\\\\u0026');\r\n};\r\n\r\nmodule.exports = function(req, res, next) {\r\n    var _send = res.send;\r\n\r\n    res.send = function (body) {\r\n\tif (res.get('Content-Type') === 'application/json') {\r\n\t    body = escapeJson(body);\r\n\t}\r\n\t_send.call(res, body);\r\n    };\r\n\r\n    next();\r\n};\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3265",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3265/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3265/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3265/events",
    "html_url": "https://github.com/expressjs/express/issues/3265",
    "id": 218140539,
    "number": 3265,
    "title": "Express Router Returns Controllers Used in the Other Router  Ask",
    "user": {
      "login": "golkir",
      "id": 4704602,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4704602?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/golkir",
      "html_url": "https://github.com/golkir",
      "followers_url": "https://api.github.com/users/golkir/followers",
      "following_url": "https://api.github.com/users/golkir/following{/other_user}",
      "gists_url": "https://api.github.com/users/golkir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/golkir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/golkir/subscriptions",
      "organizations_url": "https://api.github.com/users/golkir/orgs",
      "repos_url": "https://api.github.com/users/golkir/repos",
      "events_url": "https://api.github.com/users/golkir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/golkir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-30T09:49:24Z",
    "updated_at": "2017-03-30T23:55:04Z",
    "closed_at": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3263",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3263/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3263/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3263/events",
    "html_url": "https://github.com/expressjs/express/issues/3263",
    "id": 217697363,
    "number": 3263,
    "title": "Express Typings Broken in TS 2.2.x (VS Code, WebStorm, pretty much everything)",
    "user": {
      "login": "joefallon",
      "id": 4212989,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4212989?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joefallon",
      "html_url": "https://github.com/joefallon",
      "followers_url": "https://api.github.com/users/joefallon/followers",
      "following_url": "https://api.github.com/users/joefallon/following{/other_user}",
      "gists_url": "https://api.github.com/users/joefallon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joefallon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joefallon/subscriptions",
      "organizations_url": "https://api.github.com/users/joefallon/orgs",
      "repos_url": "https://api.github.com/users/joefallon/repos",
      "events_url": "https://api.github.com/users/joefallon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joefallon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-03-28T21:25:51Z",
    "updated_at": "2017-03-28T23:57:48Z",
    "closed_at": null,
    "body": "```\r\nimport express = require('express');\r\nimport { NextFunction } from \"@types/express-serve-static-core\";\r\n\r\nconst router:express.Router = express.Router();\r\n\r\nrouter.get('/', (req: Request, res: Response, next: NextFunction) => {\r\n\r\n});\r\n\r\nexport = router;\r\n```\r\n\r\nPossibly Related: https://github.com/Microsoft/TypeScript/issues/11875\r\n\r\n**Error Message:**\r\n\r\nArgument of type '(req: Request, res: Response, next: NextFunction) => void' is not assignable to parameter of type 'RequestHandlerParams'.\r\n  Type '(req: Request, res: Response, next: NextFunction) => void' is not assignable to type '(RequestHandler | ErrorRequestHandler)[]'.\r\n    Property 'push' is missing in type '(req: Request, res: Response, next: NextFunction) => void'.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3259",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3259/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3259/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3259/events",
    "html_url": "https://github.com/expressjs/express/pull/3259",
    "id": 217105395,
    "number": 3259,
    "title": "Moves compileQueryParser to separate module",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1027776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-03-27T00:26:33Z",
    "updated_at": "2017-03-27T01:04:01Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3259",
      "html_url": "https://github.com/expressjs/express/pull/3259",
      "diff_url": "https://github.com/expressjs/express/pull/3259.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3259.patch"
    },
    "body": "Moved this functionality to a separate module so I could use it in my other package.  It appears no tests were originally written, so I added some in the module.  If you would like we can move this repo under pillar, or here, just let me know.\r\n\r\nhttps://github.com/wesleytodd/compile-query-parser"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3257",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3257/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3257/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3257/events",
    "html_url": "https://github.com/expressjs/express/issues/3257",
    "id": 216971708,
    "number": 3257,
    "title": "Promise created in handler warning",
    "user": {
      "login": "nstuyvesant",
      "id": 5770938,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5770938?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nstuyvesant",
      "html_url": "https://github.com/nstuyvesant",
      "followers_url": "https://api.github.com/users/nstuyvesant/followers",
      "following_url": "https://api.github.com/users/nstuyvesant/following{/other_user}",
      "gists_url": "https://api.github.com/users/nstuyvesant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nstuyvesant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nstuyvesant/subscriptions",
      "organizations_url": "https://api.github.com/users/nstuyvesant/orgs",
      "repos_url": "https://api.github.com/users/nstuyvesant/repos",
      "events_url": "https://api.github.com/users/nstuyvesant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nstuyvesant/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-03-25T12:41:57Z",
    "updated_at": "2017-04-22T22:02:27Z",
    "closed_at": null,
    "body": "Getting this warning:\r\n\r\n> (node:80143) Warning: a promise was created in a handler at /Users/nates/Documents/Development/shy/node_modules/express/lib/router/index.js:317:20 but was not returned from it, see http://goo.gl/rRqMUw\r\n>     at Function.Promise.attempt.Promise.try (/Users/nates/Documents/Development/shy/node_modules/bluebird/js/release/method.js:29:9)\r\n>     at runCallback (timers.js:666:20)\r\n>     at tryOnImmediate (timers.js:639:5)\r\n>     at processImmediate [as _immediateCallback] (timers.js:611:5)\r\n\r\n[This is the line of code referenced above](https://github.com/expressjs/express/blob/master/lib/router/index.js#L317)."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3251",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3251/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3251/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3251/events",
    "html_url": "https://github.com/expressjs/express/pull/3251",
    "id": 215892151,
    "number": 3251,
    "title": "test: Made unit test passing with node-chakracore",
    "user": {
      "login": "kunalspathak",
      "id": 12488060,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12488060?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kunalspathak",
      "html_url": "https://github.com/kunalspathak",
      "followers_url": "https://api.github.com/users/kunalspathak/followers",
      "following_url": "https://api.github.com/users/kunalspathak/following{/other_user}",
      "gists_url": "https://api.github.com/users/kunalspathak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kunalspathak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kunalspathak/subscriptions",
      "organizations_url": "https://api.github.com/users/kunalspathak/orgs",
      "repos_url": "https://api.github.com/users/kunalspathak/repos",
      "events_url": "https://api.github.com/users/kunalspathak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kunalspathak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      },
      {
        "id": 133578714,
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-03-21T22:01:50Z",
    "updated_at": "2017-04-27T05:12:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3251",
      "html_url": "https://github.com/expressjs/express/pull/3251",
      "diff_url": "https://github.com/expressjs/express/pull/3251.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3251.patch"
    },
    "body": "There were 4 unit test that were failing with [node-chakracore](https://github.com/nodejs/node-chakracore) because of error message difference between v8 and chakracore. Added engine specific check to validate the expected error message.\r\n\r\nRef: https://github.com/nodejs/node-chakracore/issues/189"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3225",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3225/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3225/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3225/events",
    "html_url": "https://github.com/expressjs/express/pull/3225",
    "id": 210340728,
    "number": 3225,
    "title": "check http.IncomingMessage and http.ServerResponse prototypes",
    "user": {
      "login": "gxela",
      "id": 982267,
      "avatar_url": "https://avatars3.githubusercontent.com/u/982267?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gxela",
      "html_url": "https://github.com/gxela",
      "followers_url": "https://api.github.com/users/gxela/followers",
      "following_url": "https://api.github.com/users/gxela/following{/other_user}",
      "gists_url": "https://api.github.com/users/gxela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gxela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gxela/subscriptions",
      "organizations_url": "https://api.github.com/users/gxela/orgs",
      "repos_url": "https://api.github.com/users/gxela/repos",
      "events_url": "https://api.github.com/users/gxela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gxela/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390440,
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20rebase",
        "name": "needs rebase",
        "color": "e11d21",
        "default": false
      },
      {
        "id": 55587817,
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-02-26T19:22:24Z",
    "updated_at": "2017-04-27T05:12:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3225",
      "html_url": "https://github.com/expressjs/express/pull/3225",
      "diff_url": "https://github.com/expressjs/express/pull/3225.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3225.patch"
    },
    "body": "BOOM! FIX"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3220",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3220/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3220/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3220/events",
    "html_url": "https://github.com/expressjs/express/pull/3220",
    "id": 209405536,
    "number": 3220,
    "title": "Add middleware benchmarks",
    "user": {
      "login": "allevo",
      "id": 1054125,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1054125?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allevo",
      "html_url": "https://github.com/allevo",
      "followers_url": "https://api.github.com/users/allevo/followers",
      "following_url": "https://api.github.com/users/allevo/following{/other_user}",
      "gists_url": "https://api.github.com/users/allevo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allevo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allevo/subscriptions",
      "organizations_url": "https://api.github.com/users/allevo/orgs",
      "repos_url": "https://api.github.com/users/allevo/repos",
      "events_url": "https://api.github.com/users/allevo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allevo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-02-22T10:03:46Z",
    "updated_at": "2017-04-27T05:12:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3220",
      "html_url": "https://github.com/expressjs/express/pull/3220",
      "diff_url": "https://github.com/expressjs/express/pull/3220.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3220.patch"
    },
    "body": "As already discussed at https://github.com/expressjs/express/issues/3211 I'm making a PR to add some benchmarks.\r\n\r\nImho, the most important thing to enlight is about the changing of request and response prototypes  (twice slower). But there're no possible to improve performance without breaking compatiblity."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3218",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3218/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3218/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3218/events",
    "html_url": "https://github.com/expressjs/express/pull/3218",
    "id": 209036137,
    "number": 3218,
    "title": "Settings functionality moved out of core",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1027776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 11,
      "closed_issues": 7,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2017-03-01T23:31:20Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2017-02-21T03:55:52Z",
    "updated_at": "2017-03-18T12:54:12Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3218",
      "html_url": "https://github.com/expressjs/express/pull/3218",
      "diff_url": "https://github.com/expressjs/express/pull/3218.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3218.patch"
    },
    "body": "This is based on what was discussed at the last TC meeting for a good \"first step\" in abstracting out parts of core than can be shared.  The changes here are rather far reaching, but they basically mean the following:\r\n\r\n```\r\napp.set()\r\napp.get()\r\napp.enable()\r\napp.disable()\r\napp.enabled()\r\napp.disabled()\r\n```\r\n\r\nBecome:\r\n\r\n```\r\napp.settings.set()\r\napp.settings.get()\r\napp.settings.enable()\r\napp.settings.disable()\r\napp.settings.enabled()\r\napp.settings.disabled()\r\n```\r\n\r\nI think there are a bunch of points for discussion here:\r\n\r\n1. I opted to move it all under `.settings`, mainly to resolves the weird behavior from `app.get` being multi purpose.  But it could also be done so that the methods remain the same, either via mixing them in, or explicitly calling into `.settings` as getter methods.\r\n2. If we are already breaking the api, should we also add other changes, like removing the `enabled`/`disabled` shorthands to minimize the api surface.\r\n3. Do people like the \"setters\" type functionality?  It is used to keep the features like setting `etag` but it actually setting `etag fn`.  Not sure, but it seems to me we could get rid of the whole thing but just using `etag` directly.\r\n\r\nEDIT: standardjs compliance pending :) \r\n**Dont feel like doing all that busy work tonight if the whole PR might get shut down..."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3216",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3216/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3216/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3216/events",
    "html_url": "https://github.com/expressjs/express/pull/3216",
    "id": 209006038,
    "number": 3216,
    "title": "Call callback once on listen error",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1027776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 59148,
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-20T23:40:41Z",
    "updated_at": "2017-03-18T12:54:31Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3216",
      "html_url": "https://github.com/expressjs/express/pull/3216",
      "diff_url": "https://github.com/expressjs/express/pull/3216.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3216.patch"
    },
    "body": "This is a redo of #2623.  Probably didn't need a new PR, but I took a new direction by using the `once` module, and only binding to the error event.  I think this is slightly more elegant than the previous PR.  As discussed, this is a breaking change, so can only land in a 5.x branch."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3214",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3214/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3214/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3214/events",
    "html_url": "https://github.com/expressjs/express/pull/3214",
    "id": 208959369,
    "number": 3214,
    "title": "Moves req/res out of the repo",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1027776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-02-20T18:58:33Z",
    "updated_at": "2017-03-18T12:55:04Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3214",
      "html_url": "https://github.com/expressjs/express/pull/3214",
      "diff_url": "https://github.com/expressjs/express/pull/3214.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3214.patch"
    },
    "body": "This is VERY MUCH A WIP, but the idea is that we move the code as is out of the repo.  I did it by publishing temp packages under my personal namespace, but those repo's could be moved into @pillarjs as is, and then we would just update this.\r\n\r\nAlso, I based this off the other branch I opened today (#3213) because that included breaking integration changes.  I can easily change this to not include those if we decide not to land that PR."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3213",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3213/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3213/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3213/events",
    "html_url": "https://github.com/expressjs/express/pull/3213",
    "id": 208939332,
    "number": 3213,
    "title": "Remove direct http dependency",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1027776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-02-20T17:14:09Z",
    "updated_at": "2017-03-18T12:55:25Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3213",
      "html_url": "https://github.com/expressjs/express/pull/3213",
      "diff_url": "https://github.com/expressjs/express/pull/3213.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3213.patch"
    },
    "body": "I think this might resolve the issues brought up in #2812 and #3206, and also some of what we talked about at the most recent TC meeting for compat in the browser.  The goal here is that you can do:\r\n\r\n```javascript\r\nvar express = require('express')\r\nvar uws = require('uws')\r\nvar app = express({\r\n  reqProto: uws.http.getRequestPrototype(),\r\n  resProto: uws.http.getResponsePrototype(),\r\n  createServer: uws.http.createServer\r\n})\r\n```\r\n\r\nIn the long run, I think this is also what I need for my Nighthawk project as well, so IMO it is a good way forward.  But let me know your thoughts! \r\n\r\nCC: @dougwilson, @alexhultman, @blakeembrey"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3201",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3201/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3201/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3201/events",
    "html_url": "https://github.com/expressjs/express/issues/3201",
    "id": 206974798,
    "number": 3201,
    "title": "[REQUEST] callback handler for methods",
    "user": {
      "login": "zecar",
      "id": 8117818,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8117818?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zecar",
      "html_url": "https://github.com/zecar",
      "followers_url": "https://api.github.com/users/zecar/followers",
      "following_url": "https://api.github.com/users/zecar/following{/other_user}",
      "gists_url": "https://api.github.com/users/zecar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zecar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zecar/subscriptions",
      "organizations_url": "https://api.github.com/users/zecar/orgs",
      "repos_url": "https://api.github.com/users/zecar/repos",
      "events_url": "https://api.github.com/users/zecar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zecar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false
      },
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2017-02-11T11:33:09Z",
    "updated_at": "2017-03-28T05:57:58Z",
    "closed_at": null,
    "body": "I'm referring to this bit\r\n```\r\nRoute.prototype[method] = function(){\r\n    var handles = flatten(slice.call(arguments));\r\n\r\n    for (var i = 0; i < handles.length; i++) {\r\n      var handle = handles[i];\r\n\r\n      if (typeof handle !== 'function') {\r\n        var type = toString.call(handle);\r\n        var msg = 'Route.' + method + '() requires callback functions but got a ' + type;\r\n        throw new Error(msg);\r\n      }\r\n```\r\n\r\nI wanna be able to pass something like \r\n```\r\napp.get('/api/user', 'User@get');\r\n```\r\n\r\nMaybe you could implement something like:\r\n`express.callbackHandler() `\r\nthat we should use like this\r\n```\r\nexpress.callbackHandler(function(cb){\r\nif(cb.constructor === String){\r\nreturn require(cb)\r\n}\r\nreturn cb;\r\n})\r\n```"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3197",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3197/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3197/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3197/events",
    "html_url": "https://github.com/expressjs/express/issues/3197",
    "id": 205161214,
    "number": 3197,
    "title": "express.static - add support for cache-control: immutable",
    "user": {
      "login": "ra-hardy",
      "id": 12749172,
      "avatar_url": "https://avatars3.githubusercontent.com/u/12749172?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ra-hardy",
      "html_url": "https://github.com/ra-hardy",
      "followers_url": "https://api.github.com/users/ra-hardy/followers",
      "following_url": "https://api.github.com/users/ra-hardy/following{/other_user}",
      "gists_url": "https://api.github.com/users/ra-hardy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ra-hardy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ra-hardy/subscriptions",
      "organizations_url": "https://api.github.com/users/ra-hardy/orgs",
      "repos_url": "https://api.github.com/users/ra-hardy/repos",
      "events_url": "https://api.github.com/users/ra-hardy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ra-hardy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 548077790,
        "url": "https://api.github.com/repos/expressjs/express/labels/module:express-static",
        "name": "module:express-static",
        "color": "bfe5bf",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-02-03T13:47:13Z",
    "updated_at": "2017-02-26T07:01:39Z",
    "closed_at": null,
    "body": "On static content with versioned URLs, add a flag to options on express.static that generates a cache-control header with immutable, e.g.:\r\n`Cache-Control: max-age=365000000, immutable`\r\nThis reduces unnecessary requests in supporting clients.\r\n\r\nThis is supported by Firefox 49 and used by Facebook:\r\nhttps://hacks.mozilla.org/2017/01/using-immutable-caching-to-speed-up-the-web/\r\nhttps://bitsup.blogspot.co.uk/2016/05/cache-control-immutable.html\r\n\r\nSupported in Chrome 54\r\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=611416\r\n\r\nWebkit support seems to be added:\r\nhttps://bugs.webkit.org/show_bug.cgi?id=167497\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3166",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3166/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3166/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3166/events",
    "html_url": "https://github.com/expressjs/express/issues/3166",
    "id": 198824547,
    "number": 3166,
    "title": "ETag header does not change with header mutation",
    "user": {
      "login": "domfarolino",
      "id": 9669289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/9669289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domfarolino",
      "html_url": "https://github.com/domfarolino",
      "followers_url": "https://api.github.com/users/domfarolino/followers",
      "following_url": "https://api.github.com/users/domfarolino/following{/other_user}",
      "gists_url": "https://api.github.com/users/domfarolino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domfarolino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domfarolino/subscriptions",
      "organizations_url": "https://api.github.com/users/domfarolino/orgs",
      "repos_url": "https://api.github.com/users/domfarolino/repos",
      "events_url": "https://api.github.com/users/domfarolino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domfarolino/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-04T22:13:56Z",
    "updated_at": "2017-04-27T19:03:29Z",
    "closed_at": null,
    "body": "I was reading parts of the [IETF RFC7826](https://tools.ietf.org/html/rfc7826#section-16.1.3) and noticed that a strong validator is technically one that changes whenever the entity body and/or entity headers change. I spun up a simple express app to see how this works. I used `app.set('etag', 'strong')` to ensure express was setting strong ETag headers on responses (that don't come form `express.static(..)` as apparently that's a whole different thing). I found that express's ETag headers do not change when the actual headers change though. A quick visual of this can be seen below, as I add another header to a response yet the ETag stays identical.\r\n\r\n![express-etag](https://cloud.githubusercontent.com/assets/9669289/21661136/a2cfc710-d2a0-11e6-9054-95a3264ab20c.png)\r\n\r\nI quickly dug into the express source to see why this was, and from what I can tell this is happening because in the [`lib/response.js#L184`](https://github.com/expressjs/express/blob/master/lib/response.js#L184) where we actually generate the ETag, we're only passing in `chunk`, which seems to be equal to only the body content. It might make sense, for ETags to be \"strong\", to send in both the chunk (body) and some string representation of the headers at the time, so the ETag can be generated based off of both.\r\n\r\nWilling to take a stab at this if express commiters agree it should be done."
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3161",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3161/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3161/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3161/events",
    "html_url": "https://github.com/expressjs/express/issues/3161",
    "id": 198051519,
    "number": 3161,
    "title": "View engine view path results to default after set manually",
    "user": {
      "login": "akotulu",
      "id": 1204475,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1204475?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akotulu",
      "html_url": "https://github.com/akotulu",
      "followers_url": "https://api.github.com/users/akotulu/followers",
      "following_url": "https://api.github.com/users/akotulu/following{/other_user}",
      "gists_url": "https://api.github.com/users/akotulu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akotulu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akotulu/subscriptions",
      "organizations_url": "https://api.github.com/users/akotulu/orgs",
      "repos_url": "https://api.github.com/users/akotulu/repos",
      "events_url": "https://api.github.com/users/akotulu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akotulu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-12-29T18:49:06Z",
    "updated_at": "2017-01-06T15:28:34Z",
    "closed_at": null,
    "body": "app.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\nThis does not work, path still points to \r\nFailed to lookup view \"admin/objects/list\" in views directory \"/tmp/backend/views\"\r\nbut should /tmp/backend/src/views as __dirname = /tmp/backend/src\r\n\r\nTemporary fix is to uncomment default configuration **resolve('views')** command.\r\n\r\n```javascript\r\napp.defaultConfiguration = function defaultConfiguration() {\r\n  ...\r\n  // default configuration\r\n  this.set('view', View);\r\n  **//this.set('views', resolve('views'));\r\n  this.set('jsonp callback name', 'callback');\r\n};\r\n```\r\n```json\r\n\"dependencies\": {\r\n    \"app-module-path\": \"^2.1.0\",\r\n    \"body-parser\": \"^1.15.2\",\r\n    \"chai\": \"^3.5.0\",\r\n    \"debug\": \"^2.3.2\",\r\n    \"express\": \"^4.14.0\",\r\n    \"install\": \"^0.8.2\",\r\n    \"is-my-json-valid\": \"^2.15.0\",\r\n    \"lowdb\": \"^0.14.0\",\r\n    \"mocha\": \"^3.1.2\",\r\n    \"npm\": \"^4.0.3\",\r\n    \"path\": \"^0.12.7\",\r\n    \"pug\": \"^2.0.0-beta6\",\r\n    \"socket.io\": \"^1.5.1\",\r\n    \"uuid\": \"^3.0.0\",\r\n    \"winston\": \"^2.3.0\"\r\n  }\r\n```\r\n[Full code](http://existanz.planet.ee/dl/express_view_example.zip)"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3143",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3143/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3143/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3143/events",
    "html_url": "https://github.com/expressjs/express/pull/3143",
    "id": 191884789,
    "number": 3143,
    "title": "Gracefully handle invalid status codes",
    "user": {
      "login": "nickclaw",
      "id": 2576091,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2576091?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickclaw",
      "html_url": "https://github.com/nickclaw",
      "followers_url": "https://api.github.com/users/nickclaw/followers",
      "following_url": "https://api.github.com/users/nickclaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickclaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickclaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickclaw/subscriptions",
      "organizations_url": "https://api.github.com/users/nickclaw/orgs",
      "repos_url": "https://api.github.com/users/nickclaw/repos",
      "events_url": "https://api.github.com/users/nickclaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickclaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 11,
      "closed_issues": 7,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2017-03-01T23:31:20Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2016-11-27T20:50:36Z",
    "updated_at": "2017-03-18T12:55:40Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3143",
      "html_url": "https://github.com/expressjs/express/pull/3143",
      "diff_url": "https://github.com/expressjs/express/pull/3143.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3143.patch"
    },
    "body": "#3137 off the 5.0 branch"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3141",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3141/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3141/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3141/events",
    "html_url": "https://github.com/expressjs/express/issues/3141",
    "id": 191743020,
    "number": 3141,
    "title": "How to generate ETags for safe HTTP methods only",
    "user": {
      "login": "mickaeltr",
      "id": 378910,
      "avatar_url": "https://avatars1.githubusercontent.com/u/378910?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mickaeltr",
      "html_url": "https://github.com/mickaeltr",
      "followers_url": "https://api.github.com/users/mickaeltr/followers",
      "following_url": "https://api.github.com/users/mickaeltr/following{/other_user}",
      "gists_url": "https://api.github.com/users/mickaeltr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mickaeltr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mickaeltr/subscriptions",
      "organizations_url": "https://api.github.com/users/mickaeltr/orgs",
      "repos_url": "https://api.github.com/users/mickaeltr/repos",
      "events_url": "https://api.github.com/users/mickaeltr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mickaeltr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-25T17:10:38Z",
    "updated_at": "2016-11-25T21:23:43Z",
    "closed_at": null,
    "body": "Hello,\r\n\r\nI am wondering if it is possible to generate (strong) ETags for safe HTTP methods only.\r\n\r\n```js\r\napp.set(\"etag\", \"strong\"); // This generates ETags for all methods\r\n\r\napp.set(\"etag\", function (body, encoding) {\r\n    … // The method is not available here so ETags cannot be generated conditionally\r\n}\r\n```\r\n\r\nMy reasons are:\r\n- It probably takes time and resources to generate (strong) ETags\r\n- Most of time, applications use ETags only for caching (ie not on unsafe methods)\r\n- Some stupid HTTP clients send If-None-Match headers also for unsafe methods and get `412 Precondition Failed` responses!\r\n\r\nThank you"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3132",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3132/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3132/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3132/events",
    "html_url": "https://github.com/expressjs/express/issues/3132",
    "id": 190165483,
    "number": 3132,
    "title": "Issue warnings when Express used in \"unexpected\" ways",
    "user": {
      "login": "adamreisnz",
      "id": 490562,
      "avatar_url": "https://avatars3.githubusercontent.com/u/490562?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreisnz",
      "html_url": "https://github.com/adamreisnz",
      "followers_url": "https://api.github.com/users/adamreisnz/followers",
      "following_url": "https://api.github.com/users/adamreisnz/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreisnz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreisnz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreisnz/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreisnz/orgs",
      "repos_url": "https://api.github.com/users/adamreisnz/repos",
      "events_url": "https://api.github.com/users/adamreisnz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreisnz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-17T21:12:36Z",
    "updated_at": "2016-11-17T22:17:06Z",
    "closed_at": null,
    "body": "Overall, I am very pleased with Express and have developed very successful API's with it. However, I decided to raise this issue, because over the last couple of months, I've run into 3 separate very hard to debug issues with different apps, which all shared the same common root causes in Express.\r\n\r\nBasically in all of the cases it boiled down to user error, and was one of two things:\r\n\r\n1) [Calling `next()` twice in the same middleware](https://github.com/expressjs/express/issues/3024) due to a forgotten/omitted `return`.\r\n2) Ending a middleware stack prematurely with `res.end()` while there was more middleware expected to run\r\n\r\nIn each case, Express did not actually trigger an error, but the resulting behaviour of the app was very flaky and it took us a long time, literally hours, to pinpoint the problems which were in fact trivial to fix.\r\n\r\nSo my question is if it's possible to have Express \"guard\" against these kind of cases somehow and maybe depending on your configuration/settings, have Express trigger warnings if such unexpected behaviour is registered?\r\n\r\nI realize it's probably a valid use case to have some middleware in the middle of the stack terminate the response, so it would be hard to write rules around that, but I don't think it's ever expected that the same `next` handler is called twice in the same middleware.\r\n\r\nAny thoughts on how we as developers can better guard against such issues?"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3119",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3119/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3119/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3119/events",
    "html_url": "https://github.com/expressjs/express/issues/3119",
    "id": 187235703,
    "number": 3119,
    "title": "Middleware usage with extra arguments",
    "user": {
      "login": "isikfsc",
      "id": 5363259,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5363259?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isikfsc",
      "html_url": "https://github.com/isikfsc",
      "followers_url": "https://api.github.com/users/isikfsc/followers",
      "following_url": "https://api.github.com/users/isikfsc/following{/other_user}",
      "gists_url": "https://api.github.com/users/isikfsc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isikfsc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isikfsc/subscriptions",
      "organizations_url": "https://api.github.com/users/isikfsc/orgs",
      "repos_url": "https://api.github.com/users/isikfsc/repos",
      "events_url": "https://api.github.com/users/isikfsc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isikfsc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-04T01:50:34Z",
    "updated_at": "2016-11-08T19:10:56Z",
    "closed_at": null,
    "body": "On the **optional arguments to an Express.js middleware** , probaly a fourth one apart from being an error handling middleware and at ideal many arguments without any Express.js specific limit, I have a logic where it comes useful. It may be achieved by a different way, but anyways. But this is **not data passing between middleware**, maybe this question should have its own post. I have already suggested some solutions for this, and osme what I was guessed of, however, this can be taken as a design suggestion for bettering the Express.js middleware use pattern. Thanks in advance.\r\n\r\nI want to make some api routes permission checked, the middleware I wish to write should look up database for a requesting user for how many reputation points (integer) he/she has. I defined an object to hold privileges and reputation points required as key value pairs. Later, middleware should look up this privileges object to see if the user has greater than or equal reputation points for a **corresponding action**. I want to pass this **corresponding action** name which is a key in the privileges object as a different string for each route.\r\n\r\nBy the way, apparently I also need route based (not Router based) middleware mounting, I am not sure if Express.js supports, but this is another story.\r\n\r\nMaybe one can describe and ask this use case as **can I parametrize a middleware function with my parameters, not just by incoming req and res objects?**\r\n\r\n```\r\n/// Privilege Check middleware\r\n// used per route with corresponding actionName\r\n// signature function (request, response, next, actionNameOneOfKeysInPrevilegesObject::String)\r\nvar privilegeCheck = function (req, res, next, actionName) {\r\n\tdb.one(\r\n\t\t`\r\n\t\t\tSELECT reputation FROM users WHERE id = $(id)\r\n\t\t`,\r\n\t\t{id: req.user.id} // remember req.user was set by jwt.sign(data) during login or signup with demanded data; here it is {id:, name:, username:,}\r\n\t)\r\n\t\t.then(function (data) {\r\n\t\t\tif(data >= privileges[actionName]) {\r\n\t\t\t\tnext();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.status(403).json({errorMessage: \"You need to have \" + privileges.questionUpvote + \" reputation to upvote.\"});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(function (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t})\r\n};\r\n```\r\n\r\n```\r\n// reputations needed for privileged actions\r\nvar privileges =\r\n{\r\n\tquestionAsk: 5,\r\n\tanswer: 15,\r\n\tacceptAnswer: 0,\r\n\tcomment: 5,\r\n\tquestionEdit: 20,\r\n\tanswerEdit: 20,\r\n\tcommentsEdit: 0,\r\n\tpostsUpvote: 30,\r\n\tpostsDownvote: 30,\r\n\tcommentsUpvote: 5,\r\n\tquestionUpvote: 10,\r\n\tquestionDownvote: 125,\r\n}\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3114",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3114/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3114/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3114/events",
    "html_url": "https://github.com/expressjs/express/pull/3114",
    "id": 185733156,
    "number": 3114,
    "title": "Options for Engines",
    "user": {
      "login": "CanisLupusXenonis",
      "id": 5897046,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5897046?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CanisLupusXenonis",
      "html_url": "https://github.com/CanisLupusXenonis",
      "followers_url": "https://api.github.com/users/CanisLupusXenonis/followers",
      "following_url": "https://api.github.com/users/CanisLupusXenonis/following{/other_user}",
      "gists_url": "https://api.github.com/users/CanisLupusXenonis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CanisLupusXenonis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CanisLupusXenonis/subscriptions",
      "organizations_url": "https://api.github.com/users/CanisLupusXenonis/orgs",
      "repos_url": "https://api.github.com/users/CanisLupusXenonis/repos",
      "events_url": "https://api.github.com/users/CanisLupusXenonis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CanisLupusXenonis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-10-27T17:32:49Z",
    "updated_at": "2017-03-18T12:55:56Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3114",
      "html_url": "https://github.com/expressjs/express/pull/3114",
      "diff_url": "https://github.com/expressjs/express/pull/3114.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3114.patch"
    },
    "body": "This is inspired by #2982. It adds an option object to engines, and adds an option for bypassing the filesystem mapping and checks done in view.js.\n\nAlternatively, this option could be used to bypass the `if (!view.path) {` check in application.js:565, or even to assign `view.path = name` somewhere around there.\n\nEither way, I think it'd be a good idea to have options for engines. \nPut into the 5.0 branch because it's a breaking change.\n"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3111",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3111/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3111/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3111/events",
    "html_url": "https://github.com/expressjs/express/pull/3111",
    "id": 185513110,
    "number": 3111,
    "title": "Throw TypeError if argument passed to res.status is null or undefined",
    "user": {
      "login": "Shastel",
      "id": 6017041,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6017041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shastel",
      "html_url": "https://github.com/Shastel",
      "followers_url": "https://api.github.com/users/Shastel/followers",
      "following_url": "https://api.github.com/users/Shastel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shastel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shastel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shastel/subscriptions",
      "organizations_url": "https://api.github.com/users/Shastel/orgs",
      "repos_url": "https://api.github.com/users/Shastel/repos",
      "events_url": "https://api.github.com/users/Shastel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shastel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false
      },
      {
        "id": 133578713,
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "avatar_url": "https://avatars0.githubusercontent.com/u/67512?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-10-26T21:19:17Z",
    "updated_at": "2017-03-18T12:56:10Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3111",
      "html_url": "https://github.com/expressjs/express/pull/3111",
      "diff_url": "https://github.com/expressjs/express/pull/3111.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3111.patch"
    },
    "body": "It's fix for #2795 \n"
  }
]
